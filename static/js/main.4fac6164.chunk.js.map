{"version":3,"sources":["store/index.ts","api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","SELECT_USER_ID","SET_TODOS_LOAD_ERROR","SET_USER_LOAD_ERROR","LOAD_USER","DELETE_TODO","loadTodosAC","todos","type","selectUserIdAC","userId","todosLoadErrorAC","newError","userLoadErrorAC","loadUserAC","user","deleteTodoAC","id","loadTodosSelector","state","selectUserIdSelector","todosLoadErrorSelector","todosLoadError","userLoadErrorSelector","userLoadError","loadUserSelector","initialState","store","createStore","action","filter","todo","composeWithDevTools","BASE_URL","getTodos","a","fetch","response","json","getUser","removeTodo","method","Status","CurrentUser","dispatch","useDispatch","useSelector","errorMessage","useEffect","userFromServer","className","name","email","phone","onClick","TodoList","useState","query","setQuery","todosStatus","setTodosStatus","selectedUserId","onDeleteTodoHandle","visibleTodos","filteredByTitle","title","toLowerCase","includes","Completed","completed","Active","preparingTodos","value","onChange","e","target","All","map","classNames","checked","readOnly","App","todosFromServer","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fac6164.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst LOAD_TODOS = 'LOAD_TODOS';\nconst SELECT_USER_ID = 'SELECT_USER_ID';\nconst SET_TODOS_LOAD_ERROR = 'SET_TODOS_LOAD_ERROR';\nconst SET_USER_LOAD_ERROR = 'SET_USER_LOAD_ERROR';\nconst LOAD_USER = 'LOAD_USER';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const loadTodosAC = (todos: Todo[]) => (\n  { type: LOAD_TODOS, todos }\n);\n\nexport const selectUserIdAC = (userId: number) => (\n  { type: SELECT_USER_ID, userId }\n);\n\nexport const todosLoadErrorAC = (newError: string) => (\n  { type: SET_TODOS_LOAD_ERROR, newError }\n);\n\nexport const userLoadErrorAC = (newError: string) => (\n  { type: SET_USER_LOAD_ERROR, newError }\n);\n\nexport const loadUserAC = (user: User | null) => (\n  { type: LOAD_USER, user }\n);\n\nexport const deleteTodoAC = (id: number) => (\n  { type: DELETE_TODO, id }\n);\n\nexport const loadTodosSelector = (state: RootState) => state.todos;\nexport const selectUserIdSelector = (state: RootState) => state.userId;\n// eslint-disable-next-line max-len\nexport const todosLoadErrorSelector = (state: RootState) => state.todosLoadError;\nexport const userLoadErrorSelector = (state: RootState) => state.userLoadError;\nexport const loadUserSelector = (state: RootState) => state.user;\n\nexport type RootState = {\n  todos: Todo[],\n  userId: number,\n  todosLoadError: string,\n  userLoadError: string,\n  user: User | null,\n};\n\nconst initialState: RootState = {\n  todos: [],\n  userId: 0,\n  todosLoadError: '',\n  userLoadError: '',\n  user: null,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: action.todos,\n      };\n\n    case SELECT_USER_ID:\n      return {\n        ...state,\n        userId: action.userId,\n      };\n\n    case SET_TODOS_LOAD_ERROR:\n      return {\n        ...state,\n        todosLoadError: action.newError,\n      };\n\n    case SET_USER_LOAD_ERROR:\n      return {\n        ...state,\n        userLoadError: action.newError,\n      };\n\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nexport default store;\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const response = await fetch(`${BASE_URL}/todos`);\n\n  return response.json();\n}\n\nexport async function getUser(userId: number): Promise<User> {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n\n  return response.json();\n}\n\nexport async function removeTodo(id: number) {\n  return fetch(`${BASE_URL}/todos/${id}`, { method: 'DELETE' });\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteTodoAC,\n  selectUserIdAC,\n  selectUserIdSelector,\n} from '../../store';\nimport { removeTodo } from '../../api/api';\n\ntype Props = {\n  todos: Todo[],\n};\n\nenum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [todosStatus, setTodosStatus] = useState('');\n\n  const dispatch = useDispatch();\n  const selectedUserId = useSelector(selectUserIdSelector);\n\n  const onFilterByTitleHandleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const onTodoSelectHandleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    setTodosStatus(e.target.value);\n  };\n\n  const onSelectUserIdHandle = (userId: number) => {\n    dispatch(selectUserIdAC(userId));\n  };\n\n  const onDeleteTodoHandle = async (id: number) => {\n    await removeTodo(id);\n\n    dispatch(deleteTodoAC(id));\n  };\n\n  const filterByTitle = () => {\n    return todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n  };\n\n  const preparingTodos = () => {\n    const filteredByTitle = filterByTitle();\n\n    switch (todosStatus) {\n      case Status.Completed: {\n        return filteredByTitle.filter(todo => todo.completed);\n      }\n\n      case Status.Active: {\n        return filteredByTitle.filter(todo => !todo.completed);\n      }\n\n      default:\n        return filteredByTitle;\n    }\n  };\n\n  const visibleTodos = preparingTodos();\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n\n        <label>\n          {'Filter by title: '}\n          <input\n            data-cy=\"filterByTitle\"\n            type=\"text\"\n            value={query}\n            onChange={onFilterByTitleHandleChange}\n          />\n        </label>\n\n        <select\n          className=\"TodoList__select\"\n          onChange={onTodoSelectHandleChange}\n        >\n          <option value={Status.All}>\n            All\n          </option>\n          <option value={Status.Active}>\n            Active\n          </option>\n          <option value={Status.Completed}>\n            Completed\n          </option>\n        </select>\n\n        <ul\n          className=\"TodoList__list\"\n          data-cy=\"listOfTodos\"\n        >\n          {visibleTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames(\n                'TodoList__item',\n                { 'TodoList__item--checked': todo.completed },\n                { 'TodoList__item--unchecked': !todo.completed },\n              )}\n            >\n              <label>\n                <input type=\"checkbox\" checked readOnly />\n                <p>{todo.title}</p>\n              </label>\n\n              {todo.userId && (\n                <div className=\"action-buttons\">\n                  <button\n                    data-cy=\"userButton\"\n                    className={classNames('TodoList__user-button button', {\n                      'TodoList__user-button--selected':\n                        todo.userId === selectedUserId,\n                    })}\n                    type=\"button\"\n                    onClick={() => onSelectUserIdHandle(todo.userId)}\n                  >\n                    {`User ${todo.userId}`}\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button button--delete\"\n                    onClick={() => onDeleteTodoHandle(todo.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './CurrentUser.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api/api';\nimport {\n  loadUserAC,\n  loadUserSelector,\n  selectUserIdAC,\n  selectUserIdSelector,\n  userLoadErrorAC,\n  userLoadErrorSelector,\n} from '../../store';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(loadUserSelector);\n  const userId = useSelector(selectUserIdSelector);\n  const errorMessage = useSelector(userLoadErrorSelector);\n\n  useEffect(() => {\n    async function response() {\n      try {\n        const userFromServer = await getUser(userId);\n\n        dispatch(loadUserAC(userFromServer));\n      } catch {\n        dispatch(loadUserAC(null));\n        dispatch(userLoadErrorAC('Cant load user from server'));\n      }\n    }\n\n    response();\n  }, [userId]);\n\n  const handleClear = () => {\n    dispatch(selectUserIdAC(0));\n  };\n\n  return (\n    <div>\n      {user ? (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              {`Selected user: ${user?.id}`}\n            </span>\n          </h2>\n\n          <h3\n            data-cy=\"userName\"\n            className=\"CurrentUser__name\"\n          >\n            {user?.name}\n          </h3>\n\n          <p className=\"CurrentUser__email\">\n            {user?.email}\n          </p>\n\n          <p className=\"CurrentUser__phone\">\n            {user?.phone}\n          </p>\n\n          <button\n            type=\"button\"\n            className=\"button CurrentUser__clear\"\n            onClick={() => handleClear()}\n          >\n            Clear User\n          </button>\n        </div>\n      ) : (\n        <p>{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from './api/api';\nimport { CurrentUser } from './components/CurrentUser/CurrentUser';\nimport { TodoList } from './components/TodoList/TodoList';\nimport {\n  todosLoadErrorAC,\n  todosLoadErrorSelector,\n  loadTodosAC,\n  loadTodosSelector,\n  selectUserIdSelector,\n} from './store';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(loadTodosSelector);\n  const selectedUserId = useSelector(selectUserIdSelector);\n  const errorMessage = useSelector(todosLoadErrorSelector);\n\n  useEffect(() => {\n    async function response() {\n      try {\n        const todosFromServer = await getTodos();\n\n        dispatch(loadTodosAC(todosFromServer));\n      } catch {\n        dispatch(todosLoadErrorAC('Cant load todos from server'));\n      }\n    }\n\n    response();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {!errorMessage ? (\n        <div className=\"App__sidebar\">\n          {todos ? (\n            <TodoList\n              todos={todos}\n            />\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      ) : (\n        <p>{errorMessage}</p>\n      )}\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}